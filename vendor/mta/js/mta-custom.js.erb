var fn = {
  validaEntero : function  ( value ) {
      var RegExPattern = /[0-9]+$/;
    return RegExPattern.test( value );
  },
  
  formateaNumero : function ( value ) {
      if ( fn.validaEntero ( value ) )  {  
      var retorno = '';
      value = value.toString().split('').reverse().join('');
      var i = value.length;
      while(i>0) retorno += ((i%3===0&&i!=value.length)?'.':'')+value.substring(i--,i);
      return retorno;
      }
      return 0;
    }
}


/* mta custom js file sales force */
if ( $('#sales_year').length > 0) {
  console.log('init sale_plan search')
  $(document).ready(function(){
        console.log('ready');

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var datasets =   
                        $.ajax({ 
                          type: "get",
                          url: "/sales/json_year",
                          data: 'y='+$('#year').val()+'&'+$('.simple_form').serialize(),
                          dataType: 'json',
                          success: function(data){ 

                           var config = {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: data.datasets
                            },
                            options: {
                                responsive: true,
                                title:{
                                    display:true,
                                    text:'Comparativa Plan de Ventas - Ventas Real - Venta Año Anterior'
                                },
                                tooltips: {
                                    mode: 'index',
                                    intersect: false,
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Meses'
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: '$MM'
                                        },
                                        ticks: {
                                          beginAtZero: false,
                                          callback: function(value, index, values) {
                                            if(parseInt(value) >= 1000){
                                              return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
                                            } else {
                                              return '$' + value;
                                            }
                                          }
                                        }
                                      }]


                                },

                            }
                        };

                        var ctx = document.getElementById("canvas").getContext("2d");
                        window.myLine = new Chart(ctx, config);

                          }
                        })
  })
}

if ( $('#sales_month').length > 0) {
  console.log('init sale_plan search')
  $(document).ready(function(){

    window.chartColors = {
      red: 'rgb(255, 99, 132)',
      orange: 'rgb(255, 159, 64)',
      yellow: 'rgb(255, 205, 86)',
      green: 'rgb(75, 192, 192)',
      blue: 'rgb(54, 162, 235)',
      purple: 'rgb(153, 102, 255)',
      grey: 'rgb(201, 203, 207)'
    };

    //filter form
    $(document).on('click','.btn-compare',function(){
      console.log('compare month');

      $.ajax({
        url: "/sales/compare_month",
        data: $('#compare').serialize(),
        cache: false
        }).done(function( html ) {
          $('#modalFillIn').modal('hide');
          $( "#compare_stores" ).html( html );
          $('.grafico-1').hide();
          //llamo al 2o grafico

          var datasets_compare =  $.ajax({ 
                          type: "get",
                          url: "/sales/compare_month_json",
                          data: $('#compare').serialize(),
                          dataType: 'json',
                          success: function(data){ 

                          var config2 = {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: data.datasets
                            },
                            options: {
                                responsive: true,
                                title:{
                                    display:true,
                                    text:'Comparativa Tiendas'
                                },
                                tooltips: {
                                    mode: 'index',
                                    intersect: false,
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Semana'
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: '$MM'
                                        },
                                        ticks: {
                                          beginAtZero: false,
                                          callback: function(value, index, values) {
                                            if(parseInt(value) >= 1000){
                                              return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
                                            } else {
                                              return '$' + value;
                                            }
                                          }
                                        }
                                      }]


                                },

                            }
                          };

                          var ctx2 = document.getElementById("canvas2").getContext("2d");
                          window.myLine = new Chart(ctx2, config2);

                          }
                        })
                    })

      });

  

        var datasets =  $.ajax({ 
                          type: "get",
                          url: "/sales/json_month",
                          data: $('.simple_form').serialize(),
                          dataType: 'json',
                          success: function(data){ 

                           var config = {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: data.datasets
                            },
                            options: {
                                responsive: true,
                                title:{
                                    display:true,
                                    text:'Comparativa Plan de Ventas - Ventas Real - Venta Año Anterior'
                                },
                                tooltips: {
                                    mode: 'index',
                                    intersect: false,
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Semana'
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: '$MM'
                                        },
                                        ticks: {
                                          beginAtZero: false,
                                          callback: function(value, index, values) {
                                            if(parseInt(value) >= 1000){
                                              return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
                                            } else {
                                              return '$' + value;
                                            }
                                          }
                                        }
                                      }]


                                },

                            }
                        };

                        var ctx = document.getElementById("canvas").getContext("2d");
                        window.myLine = new Chart(ctx, config);

                          }
                        })
  })
}

if ( $('#sales_week').length > 0) {
  console.log('init sale_plan_week search')

    $(document).ready(function(){
        console.log('ready');

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var datasets =   

                        $.ajax({ 
                          type: "get",
                          url: "/sales/json_week",
                          data: 'week='+$('#week').val()+'&'+$('.simple_form').serialize(),
                          dataType: 'json',
                          success: function(data){ 

                           var config = {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: data.datasets
                            },
                            options: {
                                responsive: true,
                                title:{
                                    display:true,
                                    text:'Comparativa Plan de Ventas - Ventas Real - Venta Año Anterior'
                                },
                                tooltips: {
                                    mode: 'index',
                                    intersect: false,
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Semana'
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: '$MM'
                                        },
                                        ticks: {
                                          beginAtZero: false,
                                          callback: function(value, index, values) {
                                            if(parseInt(value) >= 1000){
                                              return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
                                            } else {
                                              return '$' + value;
                                            }
                                          }
                                        }
                                      }]


                                },

                            }
                        };

                        var ctx = document.getElementById("canvas").getContext("2d");
                        window.myLine = new Chart(ctx, config);

                          }
                        })

 
   })
}

if ( $('#sales_day').length > 0) {
  console.log('init sale_plan_day search')

    $(document).ready(function(){
        console.log('ready');

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var datasets =   

                        $.ajax({ 
                          type: "get",
                          url: "/sales/json_day",
                          data: 'd='+$('#day').val()+'&'+$('.simple_form').serialize(),
                          dataType: 'json',
                          success: function(data){ 

                           var config = {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: data.datasets
                            },
                            options: {
                                responsive: true,
                                title:{
                                    display:true,
                                    text:'Comparativa Plan de Ventas - Ventas Real'
                                },
                                tooltips: {
                                    mode: 'index',
                                    intersect: false,
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Horario'
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: '$CLP'
                                        },
                                        ticks: {
                                          beginAtZero: false,
                                          callback: function(value, index, values) {
                                            if(parseInt(value) >= 1000){
                                              return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
                                            } else {
                                              return '$' + value;
                                            }
                                          }
                                        }
                                      }]


                                },

                            }
                        };

                        var ctx = document.getElementById("canvas").getContext("2d");
                        window.myLine = new Chart(ctx, config);

                          }
                        })

 
   })
}

if ( $('#sales_search_form').length > 0) {
 
  $(document).on('click','.btn-params-sales',function(){
    $('#sales_form').slideToggle('slow');
  });

}

if ( $('#seller_details').length > 0) {
    console.log('init seller_details')

           var myEvents =  
                        $.parseJSON(
                            $.ajax({
                              method: "GET",
                              url: "calendar_shift.json",
                              data: { id: $('#seller_id').val() },
                              dataType: "json", 
                              async: false
                            }).responseText)

     $('#calendar_container').pagescalendar({
        ui: {
            year: {
                visible: false,
                format: 'YYYY',
                startYear: '2017',
                endYear: moment().add(1, 'year').format('YYYY'),
                eventBubble: true
            },
            month: {
                visible: true,
                format: 'MMM',
                eventBubble: true
            },
            date: {
                format: 'MMMM YYYY, D dddd'
            },
            week: {
                day: {
                    format: 'D'
                },
                header: {
                    format: 'dd'
                },
                eventBubble: true,
                startOfTheWeek: '0',
                endOfTheWeek:'6'
            },
            grid: {
                dateFormat: 'D dddd',
                timeFormat: 'h A',
                eventBubble: true,
                slotDuration: '30'
            }
        },
        header: {
            visible: false,
            dateFormat: 'MMM YYYY'
        },
        miniCalendar: {
            visible: true,
            highlightWeek: true,
            showEventBubbles: true
        },
        eventObj: {
            editable: false
        },
        view:'month',
        now: null,
        locale: 'es',
        timeFormat: 'h:mm a',
        minTime:0,
        maxTime:24,
        dateFormat: 'MMMM Do YYYY',
        slotDuration: '30', //In Mins : only supports 30 and 60
        events: myEvents,
        eventOverlap: true,
        weekends:true,
        disableDates:[],
        //Event CallBacks
     })
}

/***
* Inicio de API 
* 
*
*/


if ($('#productivity_demo').length > 0) 
{ 
  function getQueryVariable(variable) {
   var query = window.location.search.substring(1);
   var vars = query.split("&");
   for (var i=0; i < vars.length; i++) {
       var pair = vars[i].split("=");
       if(pair[0] == variable) {
           return pair[1];
       }
   }
   return false;
  }
  console.log('init productivity_demo');
  var month = getQueryVariable('month');
  var year = getQueryVariable('year');
  var store = getQueryVariable('store');
  var department = getQueryVariable('department');
  var week = getQueryVariable('week');
  var data_month = "";
  //si existen datos en la bd los trae
  $(document).ready(function()
  {
    var datasets1 = $.ajax(
    { 
      type: "GET",
      url: '/productivity/data_month',
      async: false,
      data: 'month='+month+'&year='+year+'&store='+store+'&department='+department,
      dataType: 'json',
      success: function(json)
      { 
        return json;
      }
    });

    if (!datasets1.responseJSON.existe)
    {
        // si no carga la API
        $('.page-container').pgNotification({
          style: 'simple',
          message: 'Cargando datos',
          timeout: 3000,
          type: 'info',
        }).show();

        var datasets = $.ajax(
        { 
          type: "get",
          url: "/productivity/json_current",
          data: 'month='+month+'&year='+year+'&store='+store+'&department='+department+'&week='+$('#week').val()+'&'+$('.simple_form').serialize(),
          dataType: 'json',
          success: function(data)
          { 
            fecha = data.dates_week.concat(data.dates_week_2).concat(data.dates_week_3).concat(data.dates_week_4);
            mes = data.spm1;
            // incializar api
            Cerebro.enviarDatos(plan_enviado);
            productividad_diaria = Cerebro.productividadDiaria();
            sum_turnos_real   = Cerebro.totalTurnosReales();
            resumen_plan = Cerebro.obtenerResumen();
            productividad_objetivo = Cerebro.productividadObjetivo();

            for (var i = 0; i < sum_turnos_real.length; i++) 
            {
              $("#optimo-"+[i+1]).html(sum_turnos_real[i]);
            }

            var config = {
              type: 'line',
              data: 
              {
                datasets: 
                [
                  { pointRadius: 0, borderDash: [10, 5], data: productividad_objetivo, label: 'Productividad/Dotación Ideal $CLP', yAxisID: 'left-y-axis', borderColor: 'rgb(179, 178, 178)'},
                  { data: productividad_diaria, label: 'Productividad/Dotación Actual $CLP', yAxisID: 'left-y-axis', borderColor: 'rgb(75, 192, 192)'}                                      
                ],
                labels: fecha
              },
              options: 
              {
                scales: 
                {
                  yAxes: [{ id: 'left-y-axis', type: 'linear', position: 'left' }]
                }
              }
            }     

            var ctx = document.getElementById("canvas").getContext("2d");
            var myChart = new Chart(ctx, config);

            $('.page-container').pgNotification(
            {
              style: 'simple',
              message: 'Cargado',
              timeout: 3000,
              type: 'info',
            }).show();

            // setear datos de resumen
            plan_w = Calculo.semanal(Cerebro.planVentaDiario(), 7);
            plan_w1 = plan_w[0]; 
            plan_w2 = plan_w[1];
            plan_w3 = plan_w[2];
            plan_w4 = plan_w[3];
            $("#plan-w1").html(fn.formateaNumero(plan_w1));
            $("#plan-w2").html(fn.formateaNumero(plan_w2));
            $("#plan-w3").html(fn.formateaNumero(plan_w3));
            $("#plan-w4").html(fn.formateaNumero(plan_w4));


            dotacion_w = Calculo.semanal(Cerebro.sumatoriaTurnosDiaria(), 7);
            dotacion_w1 = dotacion_w[0]; 
            dotacion_w2 = dotacion_w[1];
            dotacion_w3 = dotacion_w[2];
            dotacion_w4 = dotacion_w[3];
            $("#dotacion-w1").html(dotacion_w1);
            $("#dotacion-w2").html(dotacion_w2);
            $("#dotacion-w3").html(dotacion_w3);
            $("#dotacion-w4").html(dotacion_w4);

            productividad_w = Calculo.semanal(Cerebro.productividadDiaria(), 7);
            productividad_w1 = productividad_w[0]; 
            productividad_w2 = productividad_w[1];
            productividad_w3 = productividad_w[2];
            productividad_w4 = productividad_w[3];
            $("#productividad-w1").html(fn.formateaNumero(parseInt(plan_w1/dotacion_w1)));
            $("#productividad-w2").html(fn.formateaNumero(parseInt(plan_w2/dotacion_w2)));
            $("#productividad-w3").html(fn.formateaNumero(parseInt(plan_w3/dotacion_w3)));
            $("#productividad-w4").html(fn.formateaNumero(parseInt(plan_w4/dotacion_w4)));
            //cargar turnos
            Cerebro.setearTurnos();
            turnos = Cerebro.turnos;                      
            num_turnos = Cerebro.plan.datos.num_turnos;
            count_turnos = 0;
            while(count_turnos < num_turnos)
            {
              $("#tabla-resumen tbody").append("<tr><td>" + turnos[count_turnos].turno + "</td><td>" + turnos[count_turnos].vendedores + "</td><td id='turnos-"+count_turnos+"'></td></tr>");
              count_turnos++;
            }

            //cargar margen de eficiencia                       
            dotacion_m1 = Calculo.semanal(Cerebro.sumatoriaTurnosDiaria(), Cerebro.sumatoriaTurnosDiaria().length);
            $("#hh-actual").html(dotacion_m1);

            eficiencia = (100-parseFloat(resumen_plan[0].margeAjuste.replace("%", ""))).toFixed(2);
            $("#margen-actual").html(parseFloat(eficiencia).toFixed(2)+"%");
          }
        });
    }
    else
    {
        var datasets = $.ajax(
        { 
          type: "get",
          url: "/productivity/json_current",
          data: 'month='+month+'&year='+year+'&store='+store+'&department='+department+'&week='+$('#week').val()+'&'+$('.simple_form').serialize(),
          dataType: 'json',
          success: function(data)
          { 
            fecha = data.dates_week.concat(data.dates_week_2).concat(data.dates_week_3).concat(data.dates_week_4);
            mes = data.spm1;
            // incializar Datos guardados
            
            Cerebro.plan = plan_enviado;
            var respuesta = "";
            Cerebro.caso = Cerebro.plan.id_caso;
            Cerebro.salida = datasets1.responseJSON.summary;//enviar_datos_api_ajax("ver_salida", this.caso, this.email);
            Cerebro.setearResumen();
            productividad_diaria = Cerebro.productividadDiaria();
            sum_turnos_real = Cerebro.totalTurnosReales();
            resumen_plan = Cerebro.obtenerResumen();
            productividad_objetivo = Cerebro.productividadObjetivo();
            // setear datos de resumen
            plan_w = Calculo.semanal(Cerebro.planVentaDiario(), 7);
            plan_w1 = plan_w[0]; 
            plan_w2 = plan_w[1];
            plan_w3 = plan_w[2];
            plan_w4 = plan_w[3];
            $("#plan-w1").html(fn.formateaNumero(plan_w1));
            $("#plan-w2").html(fn.formateaNumero(plan_w2));
            $("#plan-w3").html(fn.formateaNumero(plan_w3));
            $("#plan-w4").html(fn.formateaNumero(plan_w4));


            dotacion_w = Calculo.semanal(Cerebro.sumatoriaTurnosDiaria(), 7);
            dotacion_w1 = dotacion_w[0]; 
            dotacion_w2 = dotacion_w[1];
            dotacion_w3 = dotacion_w[2];
            dotacion_w4 = dotacion_w[3];
            $("#dotacion-w1").html(dotacion_w1);
            $("#dotacion-w2").html(dotacion_w2);
            $("#dotacion-w3").html(dotacion_w3);
            $("#dotacion-w4").html(dotacion_w4);

            productividad_w = Calculo.semanal(Cerebro.productividadDiaria(), 7);
            productividad_w1 = productividad_w[0]; 
            productividad_w2 = productividad_w[1];
            productividad_w3 = productividad_w[2];
            productividad_w4 = productividad_w[3];
            $("#productividad-w1").html(fn.formateaNumero(parseInt(plan_w1/dotacion_w1)));
            $("#productividad-w2").html(fn.formateaNumero(parseInt(plan_w2/dotacion_w2)));
            $("#productividad-w3").html(fn.formateaNumero(parseInt(plan_w3/dotacion_w3)));
            $("#productividad-w4").html(fn.formateaNumero(parseInt(plan_w4/dotacion_w4)));
            //cargar turnos
            Cerebro.setearTurnos();
            turnos = Cerebro.turnos;                      
            num_turnos = Cerebro.plan.datos.num_turnos;
            count_turnos = 0;
            while(count_turnos < num_turnos)
            {
              $("#tabla-resumen tbody").append("<tr><td>" + turnos[count_turnos].turno + "</td><td>" + turnos[count_turnos].vendedores + "</td><td id='turnos-"+count_turnos+"'></td></tr>");
              count_turnos++;
            }

            //cargar margen de eficiencia                       
            dotacion_m1 = Calculo.semanal(Cerebro.sumatoriaTurnosDiaria(), Cerebro.sumatoriaTurnosDiaria().length);
            $("#hh-actual").html(dotacion_m1);

            eficiencia = (100-parseFloat(resumen_plan[0].margeAjuste.replace("%", ""))).toFixed(2);
            $("#margen-actual").html(parseFloat(eficiencia).toFixed(2)+"%");

            // fin
            Cerebro.brainJson = JSON.parse(datasets1.responseJSON.json_result);
            productividad_diaria = Cerebro.productividadDiaria();
            sum_turnos_real   = Cerebro.totalTurnosReales();
            resumen_plan = Cerebro.obtenerResumen();
            productividad_objetivo = Cerebro.productividadObjetivo();

            for (var i = 0; i < sum_turnos_real.length; i++) 
            {
              $("#optimo-"+[i+1]).html(sum_turnos_real[i]);
            }

            matrizDelta       = Cerebro.calcularDelta();
            matrixAlmuerzo      = Cerebro.calcularAlmuerzos();
            sum_turnos_real       = Cerebro.totalTurnosReales();
            productividad_diaria  = Cerebro.productividadDiaria();
            productividad_optimizada = Cerebro.productividadOptimizada();
            productividad_objetivo = Cerebro.productividadObjetivo();
            matrizSemana = Cerebro.calcularPerdida(matrizDelta);
            resumen_plan = Cerebro.obtenerResumen();

            if (resumen_plan[1] == undefined)
            {
              setInterval( function(){ console.log("esperando...")}, 1000);
              optimizar();
            }
            else
            {
              sumatoria_turnos_optimizados = Cerebro.totalTurnosOptimizados();  
              initOptimizado = new Array(281);

              for (var i = 0; i < sum_turnos_real.length; i++) 
              {
                $("#optimo-"+[i+1]).html(sum_turnos_real[i]);
              }

              for (var i = initOptimizado.length-1; i >= 0; i--) 
              {
                $("#optimizado-"+[i]).html(sumatoria_turnos_optimizados[i-1]);
              }

              for (var i = matrixAlmuerzo.length - 1; i >= 0; i--) 
              {
                if (matrixAlmuerzo[i])
                {
                  $("#optimizado-"+[i]).html($("#optimizado-"+[i]).html()-matrixAlmuerzo[i]);
                }
              }


              var config = {
              type: 'line',
              data: {
              datasets: [
              {data: productividad_diaria, label: 'Productividad/Dotación Actual $CLP', yAxisID: 'left-y-axis',borderColor: 'rgb(75, 192, 192)'},    
              {data: productividad_optimizada, label: 'Productividad/Dotación Optimizada $CLP', yAxisID: 'left-y-axis', borderColor: 'rgb(54, 162, 235)'},
              {pointRadius: 0, borderDash: [10, 5], data: productividad_objetivo, label: 'Productividad/Dotación Ideal $CLP', yAxisID: 'left-y-axis', borderColor: 'rgb(179, 178, 178)'}                                  
              ],
              labels: fecha
              },
              options: {
              scales: {
              yAxes: [{
              id: 'left-y-axis',
              type: 'linear',
              position: 'left'
              }]
              }
              }
              }    
              document.getElementById("chartContainer").innerHTML = '&nbsp;';
              document.getElementById("chartContainer").innerHTML = '<canvas id="canvas"></canvas>';

              var ctx = document.getElementById("canvas").getContext("2d");
              var myChart = new Chart(ctx, config);

              //
              eficiencia1 = 100-parseFloat(resumen_plan[0].margeAjuste.replace("%", ""));
              $("#margen-actual").html(eficiencia1+"%");
              eficiencia2 = 100-parseFloat(resumen_plan[1].margeAjuste.replace("%", ""));
              $("#margen-optimizado").html(eficiencia2+"%");
              dotacion_m1 = Calculo.semanal(Cerebro.sumatoriaTurnosOptimizado(), Cerebro.sumatoriaTurnosOptimizado().length);
              $("#hh-optimizado").html(dotacion_m1);


              Cerebro.setearTurnos();
              turnos = Cerebro.turnos;                      
              num_turnos = Cerebro.plan.datos.num_turnos;
              count_turnos = 0;
              while(count_turnos < num_turnos)
              {
              $("#turnos-"+count_turnos).html(turnos[count_turnos+num_turnos].vendedores);
              count_turnos++;
              }
              $('.page-container').pgNotification({
              style: 'simple',
              message: 'Calculos realizados',
              timeout: 3000,
              type: 'info',
              }).show(); 
              $("#minutos_optimizando").prop('disabled', false);
              $(".btn-optimize").prop('disabled', false);
            } 
         }
        });      
    }
  })
}
