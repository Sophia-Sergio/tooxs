apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: app-tooxs
    name: app-tooxs
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    type: LoadBalancer
    selector:
      io.kompose.service: app-tooxs
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: db-tooxs
    name: db-tooxs
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: db-tooxs
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: redis-sideqik-tooxs
    name: redis-sideqik-tooxs
  spec:
    ports:
    - name: "6380"
      port: 6380
      targetPort: 6380
    selector:
      io.kompose.service: redis-sideqik-tooxs
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: redis-tooxs
    name: redis-tooxs
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis-tooxs
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: app-tooxs
    name: app-tooxs
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: app-tooxs
      spec:
        containers:
        - env:
          - name: APP_HOST
            value: localhost
          - name: APP_PORT
            value: "3000"
          - name: DEFAULT_URL_HOST
            value: localhost:3000
          - name: SMTP_EMAIL_ADDRESS
            value: smtp.sendgrid.net
          - name: SMTP_EMAIL_AUTH
            value: plain
          - name: SMTP_EMAIL_DOMAIN
            value: tooxs.com
          - name: SMTP_EMAIL_PASSWORD
            value: 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
          - name: SMTP_EMAIL_PORT
            value: "587"
          - name: SMTP_EMAIL_STARTTLS
            value: "true"
          - name: SMTP_EMAIL_USERNAME
            value: apikey
          - name: TOOXS_DATABASE_HOST
            value: db-tooxs
          - name: TOOXS_DATABASE_NAME
            value: salesforce_reporter_development
          - name: TOOXS_DATABASE_PASSWORD
            value: dbtooxs_pass
          - name: TOOXS_DATABASE_PORT
            value: "5432"
          - name: TOOXS_DATABASE_USERNAME
            value: dbtooxs_user
          - name: TOOXS_REDIS_HOST
            value: redis-tooxs
          - name: TOOXS_REDIS_PORT
            value: "6379"
          - name: TOOXS_REDIS_SIDEQIK_HOST
            value: redis-sideqik-tooxs
          - name: TOOXS_REDIS_SIDEQIK_PORT
            value: "6380"
          image: cdgntooxs.azurecr.io/app-tooxs:local-demo
          name: app-tooxs
          ports:
          - containerPort: 3000
          resources: {}
          # volumeMounts:
          # - mountPath: /var/app/tooxs
          #   name: app-tooxs-claim0
        restartPolicy: Always
        # volumes:
        # - name: app-tooxs-claim0
        #   persistentVolumeClaim:
        #     claimName: app-tooxs-claim0
  status: {}
# - apiVersion: v1
#   kind: PersistentVolumeClaim
#   metadata:
#     creationTimestamp: null
#     labels:
#       io.kompose.service: app-tooxs-claim0
#     name: app-tooxs-claim0
#   spec:
#     accessModes:
#     - ReadWriteOnce
#     resources:
#       requests:
#         storage: 100Mi
#   status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: db-tooxs
    name: db-tooxs
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: db-tooxs
      spec:
        containers:
        - env:
          - name: PGDATA
            value: /var/pg/data
          - name: POSTGRES_PASSWORD
            value: dbtooxs_pass
          - name: POSTGRES_USER
            value: dbtooxs_user
          image: postgres:9.5.14
          name: db-tooxs
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /var/pg
            name: db-tooxs-claim0
          - mountPath: /var/db_backups
            name: db-tooxs-claim1
        restartPolicy: Always
        volumes:
        - name: db-tooxs-claim0
          persistentVolumeClaim:
            claimName: db-tooxs-claim0
        - name: db-tooxs-claim1
          persistentVolumeClaim:
            claimName: db-tooxs-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: db-tooxs-claim0
    name: db-tooxs-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20G
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: db-tooxs-claim1
    name: db-tooxs-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5G
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: redis-sideqik-tooxs
    name: redis-sideqik-tooxs
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis-sideqik-tooxs
      spec:
        containers:
        - args:
          - redis-server
          - --port
          - "6380"
          image: redis:5
          name: redis-sideqik-tooxs
          ports:
          - containerPort: 6380
          resources: {}
          volumeMounts:
          - mountPath: /data
            name: redis-sideqik-tooxs-claim0
        restartPolicy: Always
        volumes:
        - name: redis-sideqik-tooxs-claim0
          persistentVolumeClaim:
            claimName: redis-sideqik-tooxs-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: redis-sideqik-tooxs-claim0
    name: redis-sideqik-tooxs-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1G
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o example.azure.deploy.yaml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: redis-tooxs
    name: redis-tooxs
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis-tooxs
      spec:
        containers:
        - image: redis:5
          name: redis-tooxs
          ports:
          - containerPort: 6379
          resources: {}
          volumeMounts:
          - mountPath: /data
            name: redis-tooxs-claim0
        restartPolicy: Always
        volumes:
        - name: redis-tooxs-claim0
          persistentVolumeClaim:
            claimName: redis-tooxs-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: redis-tooxs-claim0
    name: redis-tooxs-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1G
  status: {}
kind: List
metadata: {}

